<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com.smart4j.framework"/>
    <bean id="greetingProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interfaces" value="com.smart4j.framework.aop.Greeting"/>
        <property name="target" ref="greetingImpl"/>
        <property name="interceptorNames" value="greetingBeforeAndAdvice"/>

    </bean>
    <bean id="exceptionGreetingProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interfaces" value="com.smart4j.framework.aop.Greeting"/>
        <property name="target" ref="greetingThrowsExceptionImpl"/>
        <property name="interceptorNames" value="greetingThrowAdvice"/>
    </bean>
    <bean id="introduceGreetingProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 需要动态实现的接口 -->
        <property name="interfaces" value="com.smart4j.framework.aop.Apology"/>

        <property name="target" ref="greetingImpl"/>
        <property name="interceptorNames" value="greetingIntroduceAdvice" />
        <!-- 代理目标类，（默认为false,代理接口,代理接口则使用的是cglib，代理类则使用的是jdk代理) -->
        <property name="proxyTargetClass" value="true"/>

    </bean>

     <!-- 配置一个切面 -->
    <bean id="greetingAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor" >
        <property name="advice" ref="greetingBeforeAndAdvice" /> <!-- 增强 -->
        <property name="pattern" value="com.smart4j.framework.aop.GreetingImpl.good.*"/> <!-- 切点（正则表达式） -->
    </bean>
    <!-- 配置一个代理 -->
    <bean id="greetingProxyForAdvisor" class="org.springframework.aop.framework.ProxyFactoryBean" >
        <!-- 目标类 -->
        <property name="target" ref="greetingImpl"/>
        <!-- 切面 -->
        <property name="interceptorNames" value="greetingAdvisor"/>

        <!-- 是否代理目标类 -->
        <property name="proxyTargetClass" value="true" />
    </bean>
    <!-- 可以为指定后缀的类动态的创建代理，这里不能用代理接口，应该代理类，因为不知道这些类实现了多少接口 -->
    <!-- 既然cglib可以代理任何类，那么为什么jdk还需要用动态代理呢  ,cglib创建代理比较慢，创建完成以后很快，jdk则相反，各有优势-->
    <!-- 一下这个是扫描到类，不能扫描到方法 -->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator" >
        <!-- 指定后缀-->
        <property name="beanNames" value="*Impl"/>
        <!-- 指定增强 -->
        <property name="interceptorNames" value="greetingBeforeAndAdvice"/>
        <property name="optimize" value="true"/><!-- 是否进行优化 -->
    </bean>


</beans>